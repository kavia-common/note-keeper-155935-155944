{"is_source_file": true, "format": "TypeScript", "description": "This file defines an API client for interacting with a notes database backend. It includes functions to list, retrieve, create, update, and delete notes by making HTTP requests to specified endpoints. The code manages URL construction, request headers, and response parsing, providing a clean interface for frontend components to work with notes data.", "external_files": ["typescript/types for Note"], "external_methods": ["fetch", "URL"], "published": ["listNotes", "getNote", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "function buildUrl(path: string, query?: Record<string, string | number | boolean | undefined>) { buildUrl", "description": "Builds a full URL from a path and optional query parameters, combining with the base API URL.", "scope": "", "scopeKind": ""}, {"name": "async function fetchJson<T>(input: string, init?: RequestInit): Promise<T> { fetchJson", "description": "Performs a fetch request expecting a JSON response, handles errors based on response status.", "scope": "", "scopeKind": ""}, {"name": "export async function listNotes(q?: string): Promise<Note[]> { listNotes", "description": "Fetches a list of notes from the backend, optionally filtered by a search query.", "scope": "", "scopeKind": ""}, {"name": "export async function getNote(id: string): Promise<Note> { getNote", "description": "Fetches a single note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(payload: { createNote", "description": "Creates a new note with specified title and content.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote( updateNote", "description": "Updates an existing note's title and/or content by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: string): Promise<{ success: boolean }> { deleteNote", "description": "Deletes a note by ID, returning a success flag.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "buildUrl", "fetchJson"], "search-terms": ["api.ts", "notes_client", "Notes API", "Notes CRUD functions", "Note interface"], "state": 2, "file_id": 13, "knowledge_revision": 30, "git_revision": "", "ctags": [{"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^const BASE_URL =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "buildUrl", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^function buildUrl(path: string, query?: Record<string, string | number | boolean | undefined>) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^export async function createNote(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^  const data = await fetchJson<{ notes: Note[] }>(url);$/", "language": "TypeScript", "kind": "constant", "scope": "listNotes", "scopeKind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^export async function deleteNote(id: string): Promise<{ success: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchJson", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^async function fetchJson<T>(input: string, init?: RequestInit): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^export async function getNote(id: string): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "k", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^    for (const [k, v] of Object.entries(query)) {$/", "language": "TypeScript", "kind": "constant", "scope": "buildUrl", "scopeKind": "function"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^export async function listNotes(q?: string): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(input, {$/", "language": "TypeScript", "kind": "constant", "scope": "fetchJson", "scopeKind": "function"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^    const text = await res.text().catch(() => \"\");$/", "language": "TypeScript", "kind": "constant", "scope": "fetchJson", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^export async function updateNote($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^  const url = buildUrl(\"api\\/notes\");$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^  const url = buildUrl(\"api\\/notes\", q ? { q } : undefined);$/", "language": "TypeScript", "kind": "constant", "scope": "listNotes", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^  const url = buildUrl(`api\\/notes\\/${encodeURIComponent(id)}`);$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^  const url = buildUrl(`api\\/notes\\/${encodeURIComponent(id)}`);$/", "language": "TypeScript", "kind": "constant", "scope": "getNote", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^  const url = buildUrl(`api\\/notes\\/${encodeURIComponent(id)}`);$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^  const url = new URL(path.replace(\\/^\\\\\\/\\/, \"\"), BASE_URL.endsWith(\"\\/\") ? BASE_URL : BASE_URL/", "language": "TypeScript", "kind": "constant", "scope": "buildUrl", "scopeKind": "function"}, {"_type": "tag", "name": "v", "path": "/home/kavia/workspace/code-generation/note-keeper-155935-155944/notes_frontend/src/lib/api.ts", "pattern": "/^    for (const [k, v] of Object.entries(query)) {$/", "language": "TypeScript", "kind": "constant", "scope": "buildUrl", "scopeKind": "function"}], "hash": "b8b4d1f057e3ffa47eab588953e07558", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/api.ts", "revision_history": [{"30": ""}]}